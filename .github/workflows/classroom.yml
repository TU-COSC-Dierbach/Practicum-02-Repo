name: Autograding Tests
on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:
    branches:
      - main
permissions:
  checks: write
  actions: read
  contents: read
jobs:
  run-autograding-tests:
    runs-on: ubuntu-latest
    if: github.actor != 'github-classroom[bot]'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

       # Set up Java (adjust the version as needed)
    - name: Set up Java
      uses: actions/setup-java@v3
      with:
         java-version: '21'
         distribution: 'temurin'  # You can change this to 'adoptopenjdk' if neede
    - name: Compile Java file
      run: javac main.java || exit 1

    - name: Run without trace_on and check output
      run: |
        output=$(java main)
        echo "$output"
        if echo "$output" | grep -q "n = "; then
          echo "Error: Trace statements should not be displayed without trace_on."
          exit 1
        else
          echo "No trace statements found, correct behavior without trace_on."
        fi



    - name: Run with trace_on and check output
      run: |
        output=$(java main trace_on)
        echo "$output"
        if echo "$output" | grep -q "n = 1" && echo "$output" | grep -q "sum = 1"; then
          echo "Trace statements found, correct behavior with trace_on."
        else
          echo "Error: Trace statements not displayed with trace_on."
          exit 1
        fi

  
    - name: Check for trace_on condition and if-else structure in code
      run: |
        if ! grep -q 'args\[0\]\.equals("trace_on")' main.java; then
          echo "Error: The condition 'args[0].equals(\"trace_on\")' is missing in main.java."
          exit 1
        else
          echo "Condition 'args[0].equals(\"trace_on\")' found."
        fi

        if ! grep -q 'if' main.java || ! grep -q 'else' main.java; then
          echo "Error: Both 'if' and 'else' statements are required in main.java."
          exit 1
        else
          echo "'if' and 'else' statements found."
        fi





    #  # Compile the Java code
    # - name: Compile Java code
    #   run: |
    #     javac main.java || exit 1 
    #  # Run Java code with trace_on argument (you can modify the arguments as needed)
    # - name: Run Java program with trace_on
    #   run: java main trace_on || exit 1

    #  # Or run Java program without any arguments
    # - name: Run Java program without trace
    #   run: java main || exit 1

    # - name: Compile Java code
    #   run: |
    #     javac main.java || exit 1  # Compile the Main.java file
    #     echo "Compilation complete"
    #     ls -l  # List files to verify if Main.class is generated
    #     if [[ ! -f main.class ]]; then
    #       echo "Error: main.class file not found!";
    #       exit 1;
    #     fi
    # - name: Run program without trace
    #   id: no_trace

    #   run: |
    #     java Main || exit 1  # Run without trace arguments and check output

    # - name: Run program with trace
    #   id: trace_on
    #   run: |
    #     java Main trace_on || exit 1  # Run with trace_on argument and check output

    # - name: Check for trace implementation
    #   run: |
    #     if [[ ! "$(steps.trace_on.outputs.result)" =~ "n = 1" ]]; then
    #       echo "Trace statements are not printed correctly when 'trace_on' is passed.";
    #       exit 1;
    #     fi
    #     echo "Trace statements are printed correctly."


# ////////////////////////////
      
    - name: main_test
      id: main_test
      uses: classroom-resources/autograding-command-grader@v1
      with:
        test-name: main_test
        setup-command: |
          javac main.java || exit 1 
        command: |
          java main || exit 1
          java main trace_on || exit 1

        timeout: 10
        max-score: 5
    - name: Autograding Reporter
      uses: classroom-resources/autograding-grading-reporter@v1
      env:
        MAIN_TEST_RESULTS: "${{steps.main_test.outputs.result}}"
      with:
        runners: main_test
